#!/usr/bin/env python

import numpy as np
from oct2py import octave
from math import sqrt
from time import sleep

def d(x1, y1, x2, y2):
	return sqrt((x1-x2)**2 + (y1-y2)**2) + 50.0

octave.addpath('/home/chroma/Documents/Multi-robot_navigation_and_control_for_acoustic_inspection_of_metal_plate_structures/scripts/')
octave.eval('pkg load statistics')
XY = np.array([
	[-0.7999999999999998, -2.05],
	[1.0250000000000004, -2.025],
	[2.2, -2.025],
	[-0.7999999999999998, -0.7999999999999998],
	[1.0250000000000004, -0.7749999999999999],
	[2.2, -0.7749999999999999],
	[-0.8249999999999997, 0.42500000000000027],
	[1.0, 0.4750000000000001],
	[2.1750000000000007, 0.4750000000000001],
	[-0.8249999999999997, 2.0500000000000007],
	[1.0, 2.1000000000000005],
	[2.1750000000000007, 2.1000000000000005],
])
max_salesmen = 1
depots = np.array([
	[-3, -4.0]
])
CostType = 1
MIN_TOUR = 1
POP_SIZE = 256
NUM_ITER = 100
SHOW_PROG = True
SHOW_RES = True
DMAT = np.array([
	[
		0.0,
		d(XY[0, 0], XY[0, 1], XY[1, 0], XY[1, 1]),
		d(XY[0, 0], XY[0, 1], XY[2, 0], XY[2, 1]),
		d(XY[0, 0], XY[0, 1], XY[3, 0], XY[3, 1]),
		d(XY[0, 0], XY[0, 1], XY[4, 0], XY[4, 1]),
		d(XY[0, 0], XY[0, 1], XY[5, 0], XY[5, 1]),
		d(XY[0, 0], XY[0, 1], XY[6, 0], XY[6, 1]),
		d(XY[0, 0], XY[0, 1], XY[7, 0], XY[7, 1]),
		d(XY[0, 0], XY[0, 1], XY[8, 0], XY[8, 1]),
		d(XY[0, 0], XY[0, 1], XY[9, 0], XY[9, 1]),
		d(XY[0, 0], XY[0, 1], XY[10, 0], XY[10, 1]),
		d(XY[0, 0], XY[0, 1], XY[11, 0], XY[11, 1])
	],
	[
		d(XY[1, 0], XY[1, 1], XY[0, 0], XY[0, 1]),
		0.0,
		d(XY[1, 0], XY[1, 1], XY[2, 0], XY[2, 1]),
		d(XY[1, 0], XY[1, 1], XY[3, 0], XY[3, 1]),
		d(XY[1, 0], XY[1, 1], XY[4, 0], XY[4, 1]),
		d(XY[1, 0], XY[1, 1], XY[5, 0], XY[5, 1]),
		d(XY[1, 0], XY[1, 1], XY[6, 0], XY[6, 1]),
		d(XY[1, 0], XY[1, 1], XY[7, 0], XY[7, 1]),
		d(XY[1, 0], XY[1, 1], XY[8, 0], XY[8, 1]),
		d(XY[1, 0], XY[1, 1], XY[9, 0], XY[9, 1]),
		d(XY[1, 0], XY[1, 1], XY[10, 0], XY[10, 1]),
		d(XY[1, 0], XY[1, 1], XY[11, 0], XY[11, 1])
	],
	[
		d(XY[2, 0], XY[2, 1], XY[0, 0], XY[0, 1]),
		d(XY[2, 0], XY[2, 1], XY[1, 0], XY[1, 1]),
		0.0,
		d(XY[2, 0], XY[2, 1], XY[3, 0], XY[3, 1]),
		d(XY[2, 0], XY[2, 1], XY[4, 0], XY[4, 1]),
		d(XY[2, 0], XY[2, 1], XY[5, 0], XY[5, 1]),
		d(XY[2, 0], XY[2, 1], XY[6, 0], XY[6, 1]),
		d(XY[2, 0], XY[2, 1], XY[7, 0], XY[7, 1]),
		d(XY[2, 0], XY[2, 1], XY[8, 0], XY[8, 1]),
		d(XY[2, 0], XY[2, 1], XY[9, 0], XY[9, 1]),
		d(XY[2, 0], XY[2, 1], XY[10, 0], XY[10, 1]),
		d(XY[2, 0], XY[2, 1], XY[11, 0], XY[11, 1])
	],
	[
		d(XY[3, 0], XY[3, 1], XY[0, 0], XY[0, 1]),
		d(XY[3, 0], XY[3, 1], XY[1, 0], XY[1, 1]),
		d(XY[3, 0], XY[3, 1], XY[2, 0], XY[2, 1]),
		0.0,
		d(XY[3, 0], XY[3, 1], XY[4, 0], XY[4, 1]),
		d(XY[3, 0], XY[3, 1], XY[5, 0], XY[5, 1]),
		d(XY[3, 0], XY[3, 1], XY[6, 0], XY[6, 1]),
		d(XY[3, 0], XY[3, 1], XY[7, 0], XY[7, 1]),
		d(XY[3, 0], XY[3, 1], XY[8, 0], XY[8, 1]),
		d(XY[3, 0], XY[3, 1], XY[9, 0], XY[9, 1]),
		d(XY[3, 0], XY[3, 1], XY[10, 0], XY[10, 1]),
		d(XY[3, 0], XY[3, 1], XY[11, 0], XY[11, 1])
	],
	[
		d(XY[4, 0], XY[4, 1], XY[0, 0], XY[0, 1]),
		d(XY[4, 0], XY[4, 1], XY[1, 0], XY[1, 1]),
		d(XY[4, 0], XY[4, 1], XY[2, 0], XY[2, 1]),
		d(XY[4, 0], XY[4, 1], XY[3, 0], XY[3, 1]),
		0.0,
		d(XY[4, 0], XY[4, 1], XY[5, 0], XY[5, 1]),
		d(XY[4, 0], XY[4, 1], XY[6, 0], XY[6, 1]),
		d(XY[4, 0], XY[4, 1], XY[7, 0], XY[7, 1]),
		d(XY[4, 0], XY[4, 1], XY[8, 0], XY[8, 1]),
		d(XY[4, 0], XY[4, 1], XY[9, 0], XY[9, 1]),
		d(XY[4, 0], XY[4, 1], XY[10, 0], XY[10, 1]),
		d(XY[4, 0], XY[4, 1], XY[11, 0], XY[11, 1])
	],
	[
		d(XY[5, 0], XY[5, 1], XY[0, 0], XY[0, 1]),
		d(XY[5, 0], XY[5, 1], XY[1, 0], XY[1, 1]),
		d(XY[5, 0], XY[5, 1], XY[2, 0], XY[2, 1]),
		d(XY[5, 0], XY[5, 1], XY[3, 0], XY[3, 1]),
		d(XY[5, 0], XY[5, 1], XY[4, 0], XY[4, 1]),
		0.0,
		d(XY[5, 0], XY[5, 1], XY[6, 0], XY[6, 1]),
		d(XY[5, 0], XY[5, 1], XY[7, 0], XY[7, 1]),
		d(XY[5, 0], XY[5, 1], XY[8, 0], XY[8, 1]),
		d(XY[5, 0], XY[5, 1], XY[9, 0], XY[9, 1]),
		d(XY[5, 0], XY[5, 1], XY[10, 0], XY[10, 1]),
		d(XY[5, 0], XY[5, 1], XY[11, 0], XY[11, 1])
	],
	[
		d(XY[6, 0], XY[6, 1], XY[0, 0], XY[0, 1]),
		d(XY[6, 0], XY[6, 1], XY[1, 0], XY[1, 1]),
		d(XY[6, 0], XY[6, 1], XY[2, 0], XY[2, 1]),
		d(XY[6, 0], XY[6, 1], XY[3, 0], XY[3, 1]),
		d(XY[6, 0], XY[6, 1], XY[4, 0], XY[4, 1]),
		d(XY[6, 0], XY[6, 1], XY[5, 0], XY[5, 1]),
		0.0,
		d(XY[6, 0], XY[6, 1], XY[7, 0], XY[7, 1]),
		d(XY[6, 0], XY[6, 1], XY[8, 0], XY[8, 1]),
		d(XY[6, 0], XY[6, 1], XY[9, 0], XY[9, 1]),
		d(XY[6, 0], XY[6, 1], XY[10, 0], XY[10, 1]),
		d(XY[6, 0], XY[6, 1], XY[11, 0], XY[11, 1])
	],
	[
		d(XY[7, 0], XY[7, 1], XY[0, 0], XY[0, 1]),
		d(XY[7, 0], XY[7, 1], XY[1, 0], XY[1, 1]),
		d(XY[7, 0], XY[7, 1], XY[2, 0], XY[2, 1]),
		d(XY[7, 0], XY[7, 1], XY[3, 0], XY[3, 1]),
		d(XY[7, 0], XY[7, 1], XY[4, 0], XY[4, 1]),
		d(XY[7, 0], XY[7, 1], XY[5, 0], XY[5, 1]),
		d(XY[7, 0], XY[7, 1], XY[6, 0], XY[6, 1]),
		0.0,
		d(XY[7, 0], XY[7, 1], XY[8, 0], XY[8, 1]),
		d(XY[7, 0], XY[7, 1], XY[9, 0], XY[9, 1]),
		d(XY[7, 0], XY[7, 1], XY[10, 0], XY[10, 1]),
		d(XY[7, 0], XY[7, 1], XY[11, 0], XY[11, 1])
	],
	[
		d(XY[8, 0], XY[8, 1], XY[0, 0], XY[0, 1]),
		d(XY[8, 0], XY[8, 1], XY[1, 0], XY[1, 1]),
		d(XY[8, 0], XY[8, 1], XY[2, 0], XY[2, 1]),
		d(XY[8, 0], XY[8, 1], XY[3, 0], XY[3, 1]),
		d(XY[8, 0], XY[8, 1], XY[4, 0], XY[4, 1]),
		d(XY[8, 0], XY[8, 1], XY[5, 0], XY[5, 1]),
		d(XY[8, 0], XY[8, 1], XY[6, 0], XY[6, 1]),
		d(XY[8, 0], XY[8, 1], XY[7, 0], XY[7, 1]),
		0.0,
		d(XY[8, 0], XY[8, 1], XY[9, 0], XY[9, 1]),
		d(XY[8, 0], XY[8, 1], XY[10, 0], XY[10, 1]),
		d(XY[8, 0], XY[8, 1], XY[11, 0], XY[11, 1])
	],
	[
		d(XY[9, 0], XY[9, 1], XY[0, 0], XY[0, 1]),
		d(XY[9, 0], XY[9, 1], XY[1, 0], XY[1, 1]),
		d(XY[9, 0], XY[9, 1], XY[2, 0], XY[2, 1]),
		d(XY[9, 0], XY[9, 1], XY[3, 0], XY[3, 1]),
		d(XY[9, 0], XY[9, 1], XY[4, 0], XY[4, 1]),
		d(XY[9, 0], XY[9, 1], XY[5, 0], XY[5, 1]),
		d(XY[9, 0], XY[9, 1], XY[6, 0], XY[6, 1]),
		d(XY[9, 0], XY[9, 1], XY[7, 0], XY[7, 1]),
		d(XY[9, 0], XY[9, 1], XY[8, 0], XY[8, 1]),
		0.0,
		d(XY[9, 0], XY[9, 1], XY[10, 0], XY[10, 1]),
		d(XY[9, 0], XY[9, 1], XY[11, 0], XY[11, 1])
	],
	[
		d(XY[10, 0], XY[10, 1], XY[0, 0], XY[0, 1]),
		d(XY[10, 0], XY[10, 1], XY[1, 0], XY[1, 1]),
		d(XY[10, 0], XY[10, 1], XY[2, 0], XY[2, 1]),
		d(XY[10, 0], XY[10, 1], XY[3, 0], XY[3, 1]),
		d(XY[10, 0], XY[10, 1], XY[4, 0], XY[4, 1]),
		d(XY[10, 0], XY[10, 1], XY[5, 0], XY[5, 1]),
		d(XY[10, 0], XY[10, 1], XY[6, 0], XY[6, 1]),
		d(XY[10, 0], XY[10, 1], XY[7, 0], XY[7, 1]),
		d(XY[10, 0], XY[10, 1], XY[8, 0], XY[8, 1]),
		d(XY[10, 0], XY[10, 1], XY[9, 0], XY[9, 1]),
		0.0,
		d(XY[10, 0], XY[10, 1], XY[11, 0], XY[11, 1])
	],
	[
		d(XY[11, 0], XY[11, 1], XY[0, 0], XY[0, 1]),
		d(XY[11, 0], XY[11, 1], XY[1, 0], XY[1, 1]),
		d(XY[11, 0], XY[11, 1], XY[2, 0], XY[2, 1]),
		d(XY[11, 0], XY[11, 1], XY[3, 0], XY[3, 1]),
		d(XY[11, 0], XY[11, 1], XY[4, 0], XY[4, 1]),
		d(XY[11, 0], XY[11, 1], XY[5, 0], XY[5, 1]),
		d(XY[11, 0], XY[11, 1], XY[6, 0], XY[6, 1]),
		d(XY[11, 0], XY[11, 1], XY[7, 0], XY[7, 1]),
		d(XY[11, 0], XY[11, 1], XY[8, 0], XY[8, 1]),
		d(XY[11, 0], XY[11, 1], XY[9, 0], XY[9, 1]),
		d(XY[11, 0], XY[11, 1], XY[10, 0], XY[10, 1]),
		0.0
	]
])

print("DMAT: ")
print(DMAT)

[min_dist, best_tour, generation] = octave.mdmtspv_ga(XY, max_salesmen, depots, CostType, MIN_TOUR, POP_SIZE, NUM_ITER, SHOW_PROG, SHOW_RES, DMAT, nout=3)
print("Minimum distance: ")
print(min_dist)
print("Best tour: ")
print(best_tour)
print("Generation: ")
print(generation)

sleep(10000000)